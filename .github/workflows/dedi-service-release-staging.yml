# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: DeDi Service Release Staging

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/**'

jobs:
  deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Configure Docker with Credentials
    - name: Configure Docker
      run: |
        docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}

     # Build the Docker image
    - name: Set version tag
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/Dockerfile
        push: true
        tags: ${{ secrets.SERVICE_IMAGENAME }}:${{ steps.vars.outputs.sha_short }}

    # Deploy the Docker image
    - name: Deploy
      uses: floms/action-caprover@v1
      with:
        host: ${{ secrets.CAPROVER_SERVER }}
        password: ${{ secrets.CAPROVER_PASSWORD }}
        app: ${{ secrets.SERVICE_CAPROVER_APPNAME }}
        image: ${{ secrets.SERVICE_IMAGENAME }}:${{ steps.vars.outputs.sha_short }}

    # GitOps
    - name: GitOps ArgoCD Setup
      run: |
        echo "${{ secrets.GITLAB_ARGOCD_KEY }}" > /tmp/gitlab-deploy-ssh-key
        chmod 600 /tmp/gitlab-deploy-ssh-key
        export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        git clone ${{ secrets.GITLAB_ARGOCD_REPOSITORY }}
    - name: GitOps ArgoCD Update Image Tag
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.spec.template.spec.containers[0].image = "${{ secrets.SERVICE_IMAGENAME }}:${{ steps.vars.outputs.sha_short }}"' 'jds-terraform-gke/k8s/desa-digital/development/deployment.yaml'

    - name: GitOps ArgoCD Create Branch, Commit, Push
      run: |
        export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        cd jds-terraform-gke/k8s/desa-digital/development
        git config user.email "github-action@github.com"
        git config user.name "Github Action"
        git checkout -b desa-digital-release-staging
        git add deployment.yaml
        git commit -m "Desa Digital Release to Staging"
        git push origin desa-digital-release-staging -o merge_request.create
